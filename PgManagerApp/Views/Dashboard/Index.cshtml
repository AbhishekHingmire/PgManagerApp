@using System.Text.Json
@model PgManagerApp.Models.DashboardViewModel

<style>
    /* Ensure the chart container is scrollable */
    .scrollable-container {
        overflow-x: auto;
        white-space: nowrap;
    }

    /* Optional: style the chart container for better presentation */
    #chartContainer {
        display: inline-block;
    }
</style>

<!-- Begin Page Content -->
<div class="container-fluid">

    <!-- Page Heading -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800 m-1">Dashboard</h1>
        <a href="#" id="downloadPdfBtn"  class="d-sm-inline-block btn btn-sm m-1 btn-primary shadow-sm" data-toggle="modal"
           data-target="#exampleModal"><i class="fas fa-download mr-1 fa-md text-white-50"></i> Download Report</a>
    </div>

    <!-- Content Row -->
    <div class="downloadReport">
    <div class="row d-fleex justify-content-center align-items-center ">

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-4 col-md-6 col-sm-6 mt-2">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Total Users
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalUsers</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-user fa-2x ml-2 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-4 col-md-6 col-sm-6 mt-2">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Room Allocated(Users)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.CountPaid</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-check fa-2x ml-2 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-4 col-md-6 col-sm-6 mt-2">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                Room Not Allocated(Users)
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.CountUnpaid</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-hourglass-half fa-2x ml-2 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-4 col-md-6 col-sm-6 mt-2">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Total Payment Received
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">₹ @Model.TotalAmount</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-rupee-sign fa-2x ml-2 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Earnings (Monthly) Card Example -->
        <div class="col-xl-4 col-md-6 col-sm-6 mt-2">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                Total Pending Payment
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">₹ @Model.TotalPendingAmount</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-rupee-sign fa-2x ml-2 text-secondary"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Chart Row -->


        <div class="container mt-4 mb-4 bg-white rounded shadow">
           <div class="row">
            <strong class="text-center m-4">Weekly Users</strong>
                <div class="col-12 scrollable-container">
                
                    <div id="chartContainer" style="height: 500px; width: 100%;"></div>
                </div>
            </div>
        </div>
    </div>

</div>
<!-- End Page Content -->
<script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.66/vfs_fonts.js"></script>


<script type="text/javascript">
    window.onload = function () {
        var chart = new CanvasJS.Chart("chartContainer", {
            data: [
                {
                    type: "column",
                    dataPoints: @Html.Raw(ViewBag.DataPoints)
                        }
            ]
        });
        chart.render();
    };


    document.getElementById('downloadPdfBtn').addEventListener('click', function () {
        // Retrieve user counts and other details from ViewBag
        var userCounts = @Html.Raw(JsonSerializer.Serialize(ViewBag.UserCounts));
        var totalUsers = @Model.TotalUsers;
        var pendingUsers = @Model.CountUnpaid;
        var allocatedUsers = @Model.CountPaid;
        var totalPendingPay = @Model.TotalPendingAmount;
        var totalAmount = @Model.TotalAmount;

        // Create the user count table body
        var tableBody = [
            [{ text: 'Day', style: 'tableHeader' }, { text: 'User Count', style: 'tableHeader' }]
        ];

        // Populate the user count table with data
        Object.keys(userCounts).forEach(day => {
            tableBody.push([day, userCounts[day]]);
        });

        // Define the PDF document
        var docDefinition = {
            content: [
                { text: 'User Report', style: 'header' },
                { text: 'Date: ' + new Date().toLocaleDateString(), style: 'subheader' },

                // First table with other details
                {
                    table: {
                        widths: ['*', '*'],
                        body: [
                            [{ text: 'Metric', style: 'tableHeader' }, { text: 'Value', style: 'tableHeader' }],
                            ['Total Users', totalUsers],
                            ['Pending Users', pendingUsers],
                            ['Allocated Users', allocatedUsers],
                            ['Total Pending Payment', '₹ ' + totalPendingPay],
                            ['Total Amount Received', '₹ ' + totalAmount]
                        ]
                    },
                    layout: {
                        fillColor: function (rowIndex, node, columnIndex) {
                            return rowIndex === 0 ? '#f1f1f1' : null;
                        },
                        hLineColor: function (i, node) {
                            return i === 0 ? 'black' : '#ddd';
                        },
                        vLineColor: function (i, node) {
                            return i === 0 ? 'black' : '#ddd';
                        },
                        hLineWidth: function (i, node) {
                            return i === 0 ? 2 : 1;
                        },
                        vLineWidth: function (i, node) {
                            return i === 0 ? 2 : 1;
                        },
                        paddingLeft: function (i) { return i === 0 ? 0 : 8; },
                        paddingRight: function (i, node) { return i === node.table.widths.length - 1 ? 0 : 8; }
                    }
                },

                // Space between tables
                { text: '', margin: [0, 10] },

                { text: 'Weekly User Counts', style: 'subheader' },
                {
                    table: {
                        widths: ['*', '*'],
                        body: tableBody
                    },
                    layout: {
                        fillColor: function (rowIndex, node, columnIndex) {
                            return rowIndex === 0 ? '#f1f1f1' : null;
                        },
                        hLineColor: function (i, node) {
                            return i === 0 ? 'black' : '#ddd';
                        },
                        vLineColor: function (i, node) {
                            return i === 0 ? 'black' : '#ddd';
                        },
                        hLineWidth: function (i, node) {
                            return i === 0 ? 2 : 1;
                        },
                        vLineWidth: function (i, node) {
                            return i === 0 ? 2 : 1;
                        },
                        paddingLeft: function (i) { return i === 0 ? 0 : 8; },
                        paddingRight: function (i, node) { return i === node.table.widths.length - 1 ? 0 : 8; }
                    }
                }
            ],
            styles: {
                header: {
                    fontSize: 18,
                    bold: true,
                    alignment: 'center',
                    margin: [0, 20, 0, 10]
                },
                subheader: {
                    fontSize: 14,
                    alignment: 'center',
                    margin: [0, 0, 0, 10]
                },
                tableHeader: {
                    bold: true,
                    fontSize: 12,
                    color: 'black',
                    fillColor: '#f1f1f1',
                    alignment: 'center'
                }
            }
        };

        // Create and download the PDF
        pdfMake.createPdf(docDefinition).download('User_Report.pdf');
    });
</script>
